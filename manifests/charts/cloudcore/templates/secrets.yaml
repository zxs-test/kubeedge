{{- $rootCASecret := (lookup "v1" "Secret" "kubesphere-system" "edgewize-root-ca" ) -}}
{{- if $rootCASecret -}}
{{- $caCrt := index $rootCASecret.data "cacrt" -}}
{{- $caKey := index $rootCASecret.data "cakey" -}}

{{- $rootCA := "" -}}
{{- if and $caCrt $caKey -}}
{{- $rootCA = buildCustomCert $caCrt $caKey -}}
{{- else -}}
{{- fail "certificate or private key in secret edgewize-root-ca invalid" -}}
{{- end -}}

{{- $ips := .Values.cloudCore.modules.cloudHub.advertiseAddress }}

{{- $altName1 := printf "kubeedge-admission-service.%s" .Release.Namespace }}
{{- $altName2 := printf "kubeedge-admission-service.%s.svc" .Release.Namespace }}
{{- $cn := printf "Kubeedge Admission" }}
{{- $cert := genSignedCert $cn $ips (list $altName1 $altName2) 36500 $rootCA -}}

{{- $altName_cloudcore1 := printf "cloudcore.%s" .Release.Namespace }}
{{- $altName_cloudcore2 := printf "cloudcore.%s.svc" .Release.Namespace }}
{{- $cn_cloudcore := printf "Kubeedge Cloudcore" }}
{{- $cert_cloudcore := genSignedCert $cn $ips (list $altName_cloudcore1 $altName_cloudcore2) 36500 $rootCA -}}

apiVersion: v1
kind: Secret
metadata:
  name: kubeedge-admission
data:
  ca.crt: {{ $rootCA.Cert | b64enc }}
  ca.key: {{ $rootCA.Key | b64enc }}
  tls.crt: {{ $cert.Cert | b64enc }}
  tls.key: {{ $cert.Key | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: cloudcore
  {{- with .Values.cloudCore.labels }}
  labels: {{- toYaml . | nindent 4 }}
  {{- end }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
data:
  tlsCA.crt: {{ $rootCA.Cert | b64enc }}
  tlsCA.key: {{ $rootCA.Key | b64enc }}
  server.crt: {{ $cert_cloudcore.Cert | b64enc }}
  server.key: {{ $cert_cloudcore.Key | b64enc }}

{{- else -}}
{{- fail "edgewize-root-ca not found" -}}
{{- end -}}